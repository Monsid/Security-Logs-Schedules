 _____                      _ _                _                            _____      _              _       _           
/  ___|                    (_) |              | |                          /  ___|    | |            | |     | |          
\ `--.  ___  ___ _   _ _ __ _| |_ _   _ ______| |     ___   __ _ ___ ______\ `--.  ___| |__   ___  __| |_   _| | ___  ___ 
 `--. \/ _ \/ __| | | | '__| | __| | | |______| |    / _ \ / _` / __|______|`--. \/ __| '_ \ / _ \/ _` | | | | |/ _ \/ __|
/\__/ /  __/ (__| |_| | |  | | |_| |_| |      | |___| (_) | (_| \__ \      /\__/ / (__| | | |  __/ (_| | |_| | |  __/\__ \
\____/ \___|\___|\__,_|_|  |_|\__|\__, |      \_____/\___/ \__, |___/      \____/ \___|_| |_|\___|\__,_|\__,_|_|\___||___/
                                   __/ |                    __/ |                                                         
                                  |___/                    |___/                                                          
                                                                                                                          
                                                                                                                         
Security-Logs-Schedules is an Admin tool developed for reviewing event IDs 4625, 4624 (successful and failed login attempts) it allows one 
to create logs of unsuccessful/successful logins and view them in the running script, The script also offers a Scheduler, which will create task 
schedules for auditing the event log for the last 10 login authentications.


______                                
| ___ \                               
| |_/ /   _ _ __ _ __   ___  ___  ___ 
|  __/ | | | '__| '_ \ / _ \/ __|/ _ \
| |  | |_| | |  | |_) | (_) \__ \  __/
\_|   \__,_|_|  | .__/ \___/|___/\___|
                | |                   
                |_|                   
Security-Logs-Schedules is a python script designed for the purpose of viewing security audit events 4624 and 4625 and saving the latest 10
log on audit events into txt files, it includes a file viewer to see the data written to the log files and a scheduler which can create a new
scheduled task in Task Scheduler to run at a specified time triggering the script “CREATEFILEWITHLOGDATA” which will generate a txt file with
the 10 latest log on audit events(ID: 4624 and 4625).

______                 _                               _       
| ___ \               (_)                             | |      
| |_/ /___  __ _ _   _ _ _ __ ___ _ __ ___   ___ _ __ | |_ ___ 
|    // _ \/ _` | | | | | '__/ _ \ '_ ` _ \ / _ \ '_ \| __/ __|
| |\ \  __/ (_| | |_| | | | |  __/ | | | | |  __/ | | | |_\__ \
\_| \_\___|\__, |\__,_|_|_|  \___|_| |_| |_|\___|_| |_|\__|___/
              | |                                              
              |_|                                              

1. Designed and Tested for Windows 10
2. Must run Python script through CMD prompt with Administrative Privileges
3. Python must be installed to path
4. PowerShell is installed and accessible
5. Security Event Auditing enabled.

 _____ _   _ ___________ _____ 
|  __ \ | | |_   _|  _  \  ___|
| |  \/ | | | | | | | | | |__  
| | __| | | | | | | | | |  __| 
| |_\ \ |_| |_| |_| |/ /| |___ 
 \____/\___/ \___/|___/ \____/ 

This script will only run properly from path "C:/Security-Logs-Schedules"  <--- This cannot be renamed.

CMD PROMPT TO SCRIPT  <cd C:/Security-Logs-Schedules>
 <"C:/Security-Logs-Schedules\RUN THIS.py"> ---------  dont type <>

Everything should work perfectly fine if user is administrator and has run cmd prompt as admininstrator and brought executed file through python. 

Was designed with Pycharm so should run perfectly fine to run on there if started Pycharm application is started as admin. 

user video guide available at - 
                               
                               
